generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Room {
  id          String     @id @default(uuid())
  eventId     String
  status      Status
  status_host StatusHost
  start_time  DateTime
  end_time    DateTime?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  Game        Game[]
}

model Game {
  id              String        @id @default(uuid())
  roomId          String
  modeId          String
  numberHistoryId String
  start_time      DateTime      @default(now())
  end_time        DateTime?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  room            Room          @relation(fields: [roomId], references: [id])
  mode            Mode          @relation(fields: [modeId], references: [id])
  numberhistory   NumberHistory @relation(fields: [numberHistoryId], references: [id])
}

model Mode {
  id          String   @id @default(uuid())
  name        String
  description String
  ruleId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  rule        Rule     @relation(fields: [ruleId], references: [id])
  Game        Game[]
}

model Rule {
  id          String   @id @default(uuid())
  name        String
  description String
  rule        String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Mode        Mode[]
}

model NumberHistory {
  id        String   @id @default(uuid())
  nums      Int[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Game      Game[]
}

model Members {
  userId String
  roomId String
  role  Role  @default(PLAYER)
  @@id([userId, roomId])
}

enum Status {
  NOT_STARTED
  STARTED
  FINISHED
  CANCELED
}

enum StatusHost {
  ONLINE
  OFFLINE
}

enum Role {
  HOST
  PLAYER
  SPECTATOR
}
