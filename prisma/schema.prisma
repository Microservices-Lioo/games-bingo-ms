generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Game {
  id          Int           @id @default(autoincrement())
  eventId     Int
  start_time  DateTime      @default(now())
  end_time    DateTime?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  ball_called BallsCalled[]
  gameModes   GameOnMode[]
}

model GameMode {
  id          Int          @id @default(autoincrement())
  name        String
  description String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  games       GameOnMode[]
  rule        GameRule?
}

model GameOnMode {
  gameId     Int
  gameModeId Int
  assignedAt DateTime  @default(now())
  assignedBy String
  end_time   DateTime?
  is_active  Boolean   @default(false)
  start_time DateTime  @default(now())
  game       Game      @relation(fields: [gameId], references: [id])
  gameMode   GameMode  @relation(fields: [gameModeId], references: [id])

  @@id([gameId, gameModeId])
}

model GameRule {
  id          Int      @id @default(autoincrement())
  description String
  rule        String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  gameModeId  Int      @unique
  gameMode    GameMode @relation(fields: [gameModeId], references: [id])
}

model BallsCalled {
  id        Int      @id @default(autoincrement())
  gameId    Int
  num       Int
  colName   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  game      Game     @relation(fields: [gameId], references: [id])
}
